openapi: 3.0.0
info:
  title: Budget Planner API
  version: 0.0.1
servers:
  - url: http://localhost:8080/api/v1/budget-planner
    description: Development server
  - url: http://localhost:4200/api/v1/budget-planner
    description: Angular Development proxy server

paths:
  /accounts/{accountId}/payments:
    get:
      operationId: findAccountPayments
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/pagination'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
        '404':
          description: account with _id=accountId not found!

  /budgets:
    get:
      operationId: findBudgets
      parameters:
        - $ref: '#/components/parameters/pagination'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Budget'
    post:
      operationId: createBudget
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Budget'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'

  /budgets/{id}:
    get:
      operationId: findBudget
      parameters:
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
        '404':
          description: budget with _id=id not found!
    delete:
      operationId: deleteBudget
      parameters:
        - $ref: '#/components/parameters/entityId'
      responses:
        '204':
          description: entity deleted

  /budgets/{id}/investors:
    patch:
      operationId: updateInvestors
      description: Replaces the list of investors in this Budget.
      parameters:
        - $ref: '#/components/parameters/entityId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              description: list of users that should be used as investors/collaborators
              items:
                type: string
                description: username
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'

  /payments:
    get:
      operationId: findPayments
      parameters:
        - $ref: '#/components/parameters/pagination'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
    post:
      operationId: createPayment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'

  /payments/{id}:
    get:
      operationId: findPayment
      parameters:
        - $ref: '#/components/parameters/entityId'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '404':
          description: payment with _id=id not found!
    delete:
      operationId: deletePayment
      parameters:
        - $ref: '#/components/parameters/entityId'
      responses:
        '204':
          description: entity deleted

  /users:
    get:
      operationId: findUsers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthUser'

components:
  parameters:
    entityId:
      name: id
      in: path
      required: true
      description: the entity's id.
      schema:
        type: string
        format: uuid
    pagination:
      name: page
      in: query
      required: false
      description: the page number to query. If empty all records are returned.
      schema:
        type: integer
  schemas:
    Account:
      properties:
        name:
          type: string
        totalAmount:
          type: number
          format: float
        _id:
          format: uuid
          type: string
    Budget:
      properties:
        name:
          type: string
        description:
          type: string
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/Account'
        investors:
          type: array
          items:
            type: string
        owner:
          type: string
        _id:
          format: uuid
          type: string
    Payment:
      properties:
        name:
          type: string
        description:
          type: string
        amount:
          format: float
          type: number
        date:
          format: date
          type: string
        owner:
          type: string
        _accountId:
          format: uuid
          type: string
        _id:
          format: uuid
          type: string
    AuthUser:
      properties:
        username:
          type: string
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
      required:
        - username
